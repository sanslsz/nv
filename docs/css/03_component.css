:root {

    --nv-cta-font-size: 14px;
    --nv-cta-small-font-size: 12px;

    --filter-search-text-margin: var(--sp_px-s);
    --filter-search-width: 100%;
    --filter-search-width-2: clamp(240px, 60vw, 400px);


}

@media screen and (min-width: 640px) {
    :root {

        --nv-cta-font-size: 15px;
        --nv-cta-small-font-size: 13px;

        --filter-search-text-margin: unset;
        --filter-search-width: clamp(300px, 50vw, 400px);


    }
}

@media screen and (min-width: 1024px) {
    :root {
        --nv-cta-font-size: 16px;
        --nv-cta-small-font-size: 14px;

    }
}

@media screen and (min-width: 1350px) {
    :root {
        --nv-cta-font-size: 18px;
        --nv-cta-small-font-size: 15px;
    }
}

/*=================== CTA ===================*/

/*=================== search ===================*/
.cp_search_text {
    font-size: 14px;
    margin-top: var(--filter-search-text-margin);
}
.cp_search_icon {
    flex: 0 0 auto;
}
.cp_search {
    position: relative;
}
.cp_searchinput {
    text-overflow: ellipsis;
    width: var(--filter-search-width);
    padding: var(--sp_em-s) calc(var(--sp_em-s) * 2 + var(--sz_icon-m)) var(--sp_em-s) var(--sp_em-s);
    background: url(cp_assets/ic_search.svg) no-repeat right 10px center / var(--sz_icon-m), var(--nv-15-5-f7);
    border: 1px solid var(--nv-12-5-cc);
    font-size: 14px;
    color: var(--nv-1-5-1a);
    position: relative;
}
/* <input> can't have genreated content with ::befoer/after */
.option2 .cp_searchinput {
    width: var(--filter-search-width-2);
}
.cp_searchinput::placeholder {
    color: var(--nv-6-5-66);
}


.cp_searchdrop {
    position: absolute;
    width: fit-content;
    max-width: 100%;
    background-color: var(--nv-16);
    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);
    top: calc(100% + 4px);
    left: 0;
    transform: translateY(-6px);
    opacity: 0;
    transition: var(--02transition);
    font-size: 14px;
    z-index: -1;
/*    hidden without display: none, or z-index: -1 interferes with content below*/
}
.cp_searchinput:focus-within ~ .cp_searchdrop {
    opacity: unset;
    transform: translate(0px);
    z-index: 10;
}
.cp_searchdrop li {
    padding: var(--sp_em-m);
/*    white-space: nowrap;*/
    line-height: 1.2;
}
.cp_searchdrop li:nth-child(n + 2) {
    border-top: 1px solid var(--nv-14-dd);
}
.cp_searchdrop li:hover {
    background-color: var(--nv-15-5-f7);
}
.cp_searchdrop span {
    font-weight: 700;
}

/* ========================= chip ========================*/

.cp_filter_chip {
    font-size: 14px;
    background-color: var(--nv-15-5-f7);
    padding: 8px 36px 7px 16px;
    padding: var(--sp_em-xs) calc(var(--sp_em-xs) + var(--sz_icon-s) + var(--sp_em-m)) var(--sp_em-xs) var(--sp_em-m);
    border: 1px solid var(--nv-12-5-cc);
    border-radius: 999px;
    position: relative;
/*    white-space: nowrap;*/
    flex: 0 0 max-content;
}
.cp_filter_chip::after {
    content: '';
    display: block;
    width: var(--sz_icon-s);
    height: var(--sz_icon-s);
    background: url(cp_assets/ic_close.svg);
    position: absolute;
    right: calc(var(--sp_em-m) - 2px);
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
}
.cp_filter_chip span {
    font-weight: 700;
    margin-right: 2px;
}
.cp_filter_chip_clear {
    font-size: 14px;
    text-decoration: underline;
    margin-left: var(--sp_px-m);
    flex: 0 0 fit-content;
    cursor: pointer;
}
/*================= filter dropdown ====================*/
.cp_dropdown {
    position: relative;
}
.cp_dropdown > input {
    position: absolute;
    top: 0;
    left: 0;
    appearance: none;
    opacity: 0;
/*    display: none;*/
/*    visibility: hidden;*/
}
/*
opacity 0 hides focus outline

apperance, opacity do not impact the flow of tabbing. display, visibility do impact. when the first radio become tabbable but the following ones aren't, it stucks when going from left to right, but not from right to left strangely 

the compromised solution is to hit extra 2 arrow keys 
*/
.cp_dropdown > input:first-child {
    display: block;
    opacity: 1;
    width: 100%;
    height: 100%;
    background-color: yellow;
/*    visibility: visible;*/
}
.cp_dropdown > label {
    font-size: 14px;
    display: block;
    cursor: pointer;
    padding: var(--sp_em-xs) calc(var(--sp_em-xs) + var(--sz_icon-s) + var(--sp_em-s)) var(--sp_em-xs) var(--sp_em-s);
    width: max-content;
    background-color: var(--nv-15-5-f7);
    border: 1px solid var(--nv-12-5-cc);
    position: relative;
}
.cp_dropdown > label::after {
    content: '';
    display: block;
    width: var(--sz_icon-s);
    height: var(--sz_icon-s);
    background: url(cp_assets/ic_chevron_dropdown_small.svg) no-repeat center / auto;
    position: absolute;
    right: calc(var(--sp_em-s) - 2px);
    top: 50%;
    transform: translateY(-50%);
    transition: var(--02transition);
}
.cp_dropdown > input:first-child:checked + input {
    display: block;
/*    visibility: visible;*/
    position: fixed;
    width: 100%;
    height: 100vh;
    background-color: green;
    z-index: -1;
}
.cp_dropdown > input:first-child:checked ~ label {
    border: 1px solid var(--nv-green);
}
.cp_dropdown > input:first-child:checked ~ label::after {
    background-image: url(cp_assets/ic_chevron_dropdown_small_green.svg);
    transform: translateY(-50%) rotate(180deg);
/*    transform-origin: center center;*/
}
.cp_dropdown > input:first-child:checked ~ input:last-child {
    display: block;
/*    visibility: visible;*/
    width: 100%;
    height: 100%;
    background-color: red;
}

.cp_dropdown_pop {
    max-width: 90vw;
    max-height: 400px;
    width: max-content;
    overflow-y: auto;
    font-size: 14px;
    position: absolute;
    padding: var(--sp_em-s) var(--sp_em-l);
    background-color: var(--nv-15-5-f7);
    border: 1px solid var(--nv-12-5-cc);
    top: calc(100% + var(--sp_px-xs) - 6px);
    left: 0;
    transform: scale(1%);
    transform-origin: top left;
    opacity: 0;
    transition: transform 0s ease-in-out 1s, opacity 0.2s ease-in-out, top 0.2s ease-in-out;
    font-weight: 400;
}
input:first-child:checked ~ .cp_dropdown_pop {
    opacity: 1;
    transform: none;
    top: calc(100% + var(--sp_px-xs));
    transition: opacity 0.2s ease-in-out 0.01s, top 0.2s ease-in-out 0.01s, transform 0s ease-in-out;
}


.cp_dropdown_pop label {
    display: block;
    max-width: min(90vw, 400px);
    padding: var(--sp_em-s) 0;
    padding-left: calc(var(--sz_icon-s) + var(--sp_em-s));
    line-height: 1.2;
/*    white-space: nowrap;*/
    position: relative;
}
.cp_dropdown_pop label input {
    visibility: hidden;
}

input:first-child:checked ~ .cp_dropdown_pop label input {
    visibility: visible;
}

.cp_dropdown_pop input:is([type="checkbox"], [type="radio"]) {
    position: absolute;
    left: 0;
    top: calc( (1.2em + var(--sp_em-s) + var(--sp_em-s))/2 - var(--sz_icon-s)/2 );
/*    transform: translateY(-50%);*/
    appearance: none;
    width: var(--sz_icon-s);
    height: var(--sz_icon-s);
    background: url(cp_assets/ic_checkbox_inactive.svg) no-repeat center / auto;
}

.cp_dropdown_pop :is([type="checkbox"], [type="radio"]):checked {
    background-image: url(cp_assets/ic_checkbox_active_green.svg);
}

/* ========================= pagination dropdown ========================*/
.cp_select {
    appearance: none;
    border: 1px solid var(--nv-12-5-cc);
    background: url(cp_assets/ic_chevron_dropdown_small.svg) no-repeat right var(--sp_em-xs) center / auto, var(--nv-15-5-f7);
    padding: 6px calc(4px + 14px + 8px) 6px 8px;
    padding: var(--sp_em-xs) calc(var(--sp_em-s) + var(--sz_icon-s)) var(--sp_em-xs) var(--sp_em-s);
    font-size: 14px;
    font-weight: 900;
    line-height: 1;
    color: var(--nv-1-5-66);
}
.cp_select_text {
    font-size: 14px;
}
/* ========================= disclaimer ========================*/
.cp_disclaimer {
    font-family: 'nomo', monospace;
    color: var(--nv-6-5-66);
    background-color: var(--nv-14-dd);
}

/* ========================= links ========================*/
.cp_link {
    color: var(--nv-green);
}
.cp_link:is(:hover, :focus, :focus-within) {
    color: var(--nv-green-hover);
}